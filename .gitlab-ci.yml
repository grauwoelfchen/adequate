stages:
  - vet
  - test
  - build
  - pages

.vet-tools: &vet-tools
  image: registry.gitlab.com/grauwoelfchen/portolan/rust-vet-tools:stable
  except:
    - tags

check:
  stage: vet
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - mkdir -p .git/hooks
  script:
    - make vet:check

format:
  stage: vet
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - cargo fmt --version
    - mkdir -p .git/hooks
  script:
    - make vet:format

lint:
  stage: vet
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - cargo clippy --version
    - mkdir -p .git/hooks
  script:
    - make vet:lint

test-doc:
  stage: test
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - kcov --version
    - mkdir -p .git/hooks
  script:
    - make test:doc

test-unit:
  stage: test
  <<: *vet-tools
  before_script:
    - rustc --version
    - cargo --version
    - kcov --version
    - mkdir -p .git/hooks
  script:
    - make coverage:lib
  after_script:
    - cat target/coverage/lib/index.js

build-debug:
  stage: build
  image: registry.gitlab.com/grauwoelfchen/portolan/rust:stable
  before_script:
    - rustc --version
    - cargo --version
    - mkdir -p .git/hooks
  script:
    - make build:debug
  cache:
    untracked: true
  only:
    - trunk

build-release:
  stage: build
  image: registry.gitlab.com/grauwoelfchen/portolan/rust:stable
  before_script:
    - rustc --version
    - cargo --version
    - mkdir -p .git/hooks
  script:
    - make build:release
  cache:
    untracked: true
  only:
    - tags

pages:
  stage: pages
  image: grauwoelfchen/rust:stable
  before_script:
    - rustc --version
    - cargo --version
    - rustdoc --version
  script:
    - make doc
    - echo "<meta http-equiv=\"refresh\" content=\"0; url=adequate\">" \
        > ./target/doc/index.html
    - mkdir public
    - cp -R ./target/doc/* public/
  artifacts:
    untracked: true
    paths:
      - public
  only:
    - tags
    - trunk
